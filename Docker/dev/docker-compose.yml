version: '3.8'

services:
  frontend:
    build:
      context: ../../
      dockerfile: Docker/dev/Dockerfile
    volumes:
      - ../../:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    networks:
      - equeue-network

  backend:
    build:
      context: ../../backend
      dockerfile: ../backend/Docker/Dockerfile
    volumes:
      - ../../backend:/app/backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_USER=equeue_user
      - DB_PASSWORD=equeue_password
      - DB_NAME=equeue_db
      - DB_PORT=3306
    command: go run main.go
    working_dir: /app/backend
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - equeue-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=equeue_db
      - MYSQL_USER=equeue_user
      - MYSQL_PASSWORD=equeue_password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - equeue-network

volumes:
  mysql_data:

networks:
  equeue-network:
    driver: bridge